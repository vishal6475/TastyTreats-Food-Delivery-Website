# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Customer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, first_name: str=None, last_name: str=None, email: str=None, password: str=None, mobile_no: str=None, location: str=None, profile_pic: str=None, token: str=None, points: float=None):  # noqa: E501
        """Customer - a model defined in Swagger

        :param id: The id of this Customer.  # noqa: E501
        :type id: int
        :param first_name: The first_name of this Customer.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this Customer.  # noqa: E501
        :type last_name: str
        :param email: The email of this Customer.  # noqa: E501
        :type email: str
        :param password: The password of this Customer.  # noqa: E501
        :type password: str
        :param mobile_no: The mobile_no of this Customer.  # noqa: E501
        :type mobile_no: str
        :param location: The location of this Customer.  # noqa: E501
        :type location: str
        :param profile_pic: The profile_pic of this Customer.  # noqa: E501
        :type profile_pic: str
        :param token: The token of this Customer.  # noqa: E501
        :type token: str
        :param points: The points of this Customer.  # noqa: E501
        :type points: float
        """
        self.swagger_types = {
            'id': int,
            'first_name': str,
            'last_name': str,
            'email': str,
            'password': str,
            'mobile_no': str,
            'location': str,
            'profile_pic': str,
            'token': str,
            'points': float
        }

        self.attribute_map = {
            'id': 'id',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'email': 'email',
            'password': 'password',
            'mobile_no': 'mobile_no',
            'location': 'location',
            'profile_pic': 'profile_pic',
            'token': 'token',
            'points': 'points'
        }
        self._id = id
        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._password = password
        self._mobile_no = mobile_no
        self._location = location
        self._profile_pic = profile_pic
        self._token = token
        self._points = points

    @classmethod
    def from_dict(cls, dikt) -> 'Customer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Customer of this Customer.  # noqa: E501
        :rtype: Customer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Customer.


        :return: The id of this Customer.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Customer.


        :param id: The id of this Customer.
        :type id: int
        """

        self._id = id

    @property
    def first_name(self) -> str:
        """Gets the first_name of this Customer.


        :return: The first_name of this Customer.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this Customer.


        :param first_name: The first_name of this Customer.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this Customer.


        :return: The last_name of this Customer.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this Customer.


        :param last_name: The last_name of this Customer.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def email(self) -> str:
        """Gets the email of this Customer.


        :return: The email of this Customer.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Customer.


        :param email: The email of this Customer.
        :type email: str
        """

        self._email = email

    @property
    def password(self) -> str:
        """Gets the password of this Customer.


        :return: The password of this Customer.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this Customer.


        :param password: The password of this Customer.
        :type password: str
        """

        self._password = password

    @property
    def mobile_no(self) -> str:
        """Gets the mobile_no of this Customer.


        :return: The mobile_no of this Customer.
        :rtype: str
        """
        return self._mobile_no

    @mobile_no.setter
    def mobile_no(self, mobile_no: str):
        """Sets the mobile_no of this Customer.


        :param mobile_no: The mobile_no of this Customer.
        :type mobile_no: str
        """

        self._mobile_no = mobile_no

    @property
    def location(self) -> str:
        """Gets the location of this Customer.


        :return: The location of this Customer.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this Customer.


        :param location: The location of this Customer.
        :type location: str
        """

        self._location = location

    @property
    def profile_pic(self) -> str:
        """Gets the profile_pic of this Customer.


        :return: The profile_pic of this Customer.
        :rtype: str
        """
        return self._profile_pic

    @profile_pic.setter
    def profile_pic(self, profile_pic: str):
        """Sets the profile_pic of this Customer.


        :param profile_pic: The profile_pic of this Customer.
        :type profile_pic: str
        """

        self._profile_pic = profile_pic

    @property
    def token(self) -> str:
        """Gets the token of this Customer.


        :return: The token of this Customer.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this Customer.


        :param token: The token of this Customer.
        :type token: str
        """

        self._token = token

    @property
    def points(self) -> float:
        """Gets the points of this Customer.


        :return: The points of this Customer.
        :rtype: float
        """
        return self._points

    @points.setter
    def points(self, points: float):
        """Sets the points of this Customer.


        :param points: The points of this Customer.
        :type points: float
        """

        self._points = points
